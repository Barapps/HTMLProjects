<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Binary Chatbot</title>
<style>
    body {
        margin: 0;
        padding: 0;
        background-color: #000;
        color: #0f0;
        font-family: monospace;
        overflow: hidden;
    }
    #container {
        width: 100vw;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    #chatbox {
        width: 80%;
        max-width: 600px;
        background-color: #000;
        border: 2px solid #0f0;
        padding: 20px;
        overflow-y: auto; /* Added scrollable overflow */
        overflow-x: hidden;
        position: relative;
        max-height: calc(100vh - 200px); /* Adjusted maximum height */
    }
    #input-container {
        display: flex;
        margin-top: 20px;
    }
    #user-input {
        flex-grow: 1;
        border: 2px solid #0f0;
        background-color: #000;
        color: #0f0;
        padding: 10px;
        font-family: monospace;
        font-size: 16px;
        outline: none;
    }
    #send-button {
        background-color: #000;
        color: #0f0;
        border: 2px solid #0f0;
        padding: 10px 20px;
        cursor: pointer;
        font-family: monospace;
        font-size: 16px;
        margin-left: 10px;
    }
    .message {
        margin-bottom: 10px;
        padding: 10px;
        border-radius: 10px;
        max-width: 80%;
    }
    .user {
        background-color: #008000;
        align-self: flex-end;
    }
    .bot {
        background-color: #003300;
        align-self: flex-start;
    }
    #clear-history {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #000;
        color: #0f0;
        border: 2px solid #0f0;
        padding: 10px 20px;
        cursor: pointer;
        font-family: monospace;
        font-size: 16px;
        z-index: 999;
    }
</style>
</head>
<body>
<div id="container">
    <div id="chatbox"></div>
</div>
<button id="clear-history">Clear Messages</button>
<script>
    const chatbox = document.getElementById('chatbox');
    const inputBox = document.createElement('input');
    const sendButton = document.createElement('button');
    const clearButton = document.getElementById('clear-history');

    inputBox.setAttribute('type', 'text');
    inputBox.setAttribute('id', 'user-input');
    inputBox.setAttribute('placeholder', 'Type your message...');
    sendButton.setAttribute('id', 'send-button');
    sendButton.textContent = 'Send';

    document.getElementById('container').appendChild(inputBox);
    document.getElementById('container').appendChild(sendButton);

    let chatHistory = JSON.parse(localStorage.getItem('chatHistory')) || [];

    let askForBinaryConversion = true; // Flag to control asking about binary conversion

    function appendMessage(message, sender) {
        const messageElement = document.createElement('div');
        messageElement.textContent = message;
        messageElement.classList.add('message', sender);
        chatbox.appendChild(messageElement);

        // Scroll chatbox to bottom after adding new message
        chatbox.scrollTop = chatbox.scrollHeight;
    }

    function sendMessage() {
        const message = inputBox.value.trim();
        if (message === '') return;

        chatHistory.push({ message, sender: 'user' });
        localStorage.setItem('chatHistory', JSON.stringify(chatHistory));
        appendMessage(message, 'user');

        if (askForBinaryConversion) {
            appendMessage("Would you like to convert your message to binary? (yes/no)", 'bot');
            askForBinaryConversion = false; // Set flag to false after asking
        } else {
            const response = inputBox.value.trim().toLowerCase();
            if (response === 'yes') {
                const userMessage = chatHistory[chatHistory.length - 2].message;
                const binaryMessage = convertToBinary(userMessage);
                appendMessage(`Binary representation: ${binaryMessage}`, 'bot');
                appendMessage("Let me know what else I can convert to binary.", 'bot');
            } else {
                appendMessage("Let me know if I can help you again.", 'bot');
            }
            askForBinaryConversion = true; // Reset flag after bot responds
        }

        inputBox.value = '';
    }

    function convertToBinary(message) {
        return message.split('').map(char => char.charCodeAt(0).toString(2)).join(' ');
    }

    function clearHistory() {
        localStorage.removeItem('chatHistory');
        chatbox.innerHTML = '';
        fadeToBlack();
    }

    function fadeToBlack() {
        document.body.style.transition = "background-color 1s";
        document.body.style.backgroundColor = "#000";
        setTimeout(() => {
            window.location.reload();
        }, 1000);
    }

    sendButton.addEventListener('click', sendMessage);
    inputBox.addEventListener('keydown', function(event) {
        if (event.key === 'Enter') {
            sendMessage();
        }
    });
    clearButton.addEventListener('click', clearHistory);

    if (chatHistory.length === 0) {
        appendMessage("Hello, how may I help you today?", 'bot');
    } else {
        chatHistory.forEach(msg => {
            appendMessage(msg.message, msg.sender);
        });
    }
</script>
</body>
</html>
